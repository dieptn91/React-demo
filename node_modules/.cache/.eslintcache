[{"C:\\D\\ReactJS-learn\\colorbox-app\\src\\index.js":"1","C:\\D\\ReactJS-learn\\colorbox-app\\src\\reportWebVitals.js":"2","C:\\D\\ReactJS-learn\\colorbox-app\\src\\App.js":"3","C:\\D\\ReactJS-learn\\colorbox-app\\src\\components\\Click.js":"4","C:\\D\\ReactJS-learn\\colorbox-app\\src\\components\\Person.js":"5","C:\\D\\ReactJS-learn\\colorbox-app\\src\\components\\ColorBox\\index.jsx":"6"},{"size":501,"mtime":1620362884054,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":2466,"mtime":1620444556447,"results":"10","hashOfConfig":"8"},{"size":275,"mtime":1620307679658,"results":"11","hashOfConfig":"8"},{"size":330,"mtime":1620362983853,"results":"12","hashOfConfig":"8"},{"size":1160,"mtime":1620444527206,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qx0rmx",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"C:\\D\\ReactJS-learn\\colorbox-app\\src\\index.js",[],"C:\\D\\ReactJS-learn\\colorbox-app\\src\\reportWebVitals.js",[],"C:\\D\\ReactJS-learn\\colorbox-app\\src\\App.js",["28","29","30","31","32"],"\nimport { render } from '@testing-library/react';\nimport { useState } from 'react';\nimport './App.css';\nimport './components/ColorBox/colorbox.css';\nimport Click from './components/Click';\nimport ColorBox from './components/ColorBox';\nimport Person from './components/Person';\n\nfunction App() {\n  const [toggle,setToggle] = useState('true');\n  const [person,setPerson] = useState(\n    [\n      {name:\"max\",age:\"10\"},\n      {name:\"max 2\",age:\"9\"},\n      {name:\"max 3\",age:\"8\"}\n    ]\n  );\nconst changeClick = ()=>{\n  setPerson(\n    [\n      {name:\"max 4\",age:\"1\"},\n      {name:\"max 5\",age:\"2\"},\n      {name:\"max 6\",age:\"3\"}\n    ]\n  );\n}\nconst switchChangeInput =(event)=>{\n  return(\n    setPerson([\n      {name:event.target.value,age:'10'},\n      {name:\"max 5\",age:\"2\"},\n      {name:\"max 6\",age:\"3\"}\n    ])\n  );\n}\nconst stylecustom = {\n  backgroundColor:'green',\n  color:'white',\n};\nlet classes=[];\n// classes =['red','bold'];\nif(person.length<=1)classes.push('red');\nif(person.length<=2)classes.push('bold');\nlet personList = null;\n  if(toggle===true){\n    personList=(\n<div>{\n  person.map((item,index)=>{\n    // return<Person changed={switchChangeInput} click={changeClick} name={item.name} age={item.age}>This is children</Person>\n    return<Person changed={switchChangeInput} click={()=>deletedPerson(index)} name={item.name} age={item.age}>This is children</Person>\n          })\n  }        \n  </div>\n    );\n    stylecustom.backgroundColor = 'blue'; \n    \n  }\nconst deletedPerson =(personIndex)=>{\n  let newPerson = [...person];\n  newPerson.splice(personIndex,1);\n  setPerson(newPerson);\n}\n\nconst changeToggle =()=>{\n    return setToggle(!toggle);   \n}\n    return (\n      <>\n      <div className=\"App\">\n        {/* <button onClick={()=>changeClick()}>Click me!</button>\n        <h1 className=\"col-xs-6 col-lg-12\">Welcome to Tutorial</h1>\n        <p className={classes.join(' ')}>This class dynamic</p> */}\n        {/* <Person changed={switchChangeInput} click={changeClick} name={person[0].name} age={person[0].age}>This is children</Person>\n        <Person changed={switchChangeInput} click={changeClick} name={person[1].name} age={person[1].age}/>\n        <Person changed={switchChangeInput} click={changeClick} name={person[2].name} age={person[2].age}/> */}\n        {/* <Click />\n        <button style={stylecustom} onClick={()=>changeToggle()}>Toggle</button>\n        {personList} */}\n        <ColorBox/>\n      </div>\n      </>\n    );\n  }\n\n\nexport default App;\n","C:\\D\\ReactJS-learn\\colorbox-app\\src\\components\\Click.js",[],"C:\\D\\ReactJS-learn\\colorbox-app\\src\\components\\Person.js",[],"C:\\D\\ReactJS-learn\\colorbox-app\\src\\components\\ColorBox\\index.jsx",["33"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nColorBox.propTypes = {\r\n    \r\n};\r\nfunction getRandomColor(){\r\n    //const COLOR_LIST = ['red','blue','black','green','yellow','deeppink'];\r\n    let r = Math.trunc(Math.random()*256);\r\n    let g = Math.trunc(Math.random()*256);\r\n    let b = Math.trunc(Math.random()*256);\r\n    //const random = Math.trunc(Math.random()*6);\r\n    const randomColor = 'rgb('+r+','+g+','+b+')';\r\n    return randomColor;\r\n}\r\n\r\nfunction ColorBox() {\r\n    const [color,setColor] = useState(()=>{\r\n        const initColor = localStorage.getItem('local_color') || 'deeppink';\r\n        return initColor;\r\n    });\r\n\r\n    function changeColor(){\r\n        const newColor = getRandomColor();\r\n        localStorage.setItem('local_color',newColor);\r\n        return setColor(newColor);\r\n    }\r\n    return (\r\n        <>\r\n        <h1 style={{color:localStorage.getItem('local_color')}}>Welcome to Color Box</h1>\r\n        <div \r\n        className=\"color-box\"\r\n        style={{backgroundColor:color}}\r\n        onClick={changeColor}\r\n        >   \r\n        </div>\r\n        </>     \r\n    );\r\n}\r\n\r\nexport default ColorBox;",{"ruleId":"34","severity":1,"message":"35","line":2,"column":10,"nodeType":"36","messageId":"37","endLine":2,"endColumn":16},{"ruleId":"34","severity":1,"message":"38","line":6,"column":8,"nodeType":"36","messageId":"37","endLine":6,"endColumn":13},{"ruleId":"34","severity":1,"message":"39","line":19,"column":7,"nodeType":"36","messageId":"37","endLine":19,"endColumn":18},{"ruleId":"34","severity":1,"message":"40","line":47,"column":5,"nodeType":"36","messageId":"37","endLine":47,"endColumn":15},{"ruleId":"34","severity":1,"message":"41","line":65,"column":7,"nodeType":"36","messageId":"37","endLine":65,"endColumn":19},{"ruleId":"34","severity":1,"message":"42","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":17},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'Click' is defined but never used.","'changeClick' is assigned a value but never used.","'personList' is assigned a value but never used.","'changeToggle' is assigned a value but never used.","'PropTypes' is defined but never used."]