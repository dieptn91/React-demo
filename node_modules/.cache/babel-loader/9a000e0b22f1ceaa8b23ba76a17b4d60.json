{"ast":null,"code":"var _jsxFileName = \"C:\\\\D\\\\ReactJS-learn\\\\colorbox-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { render } from '@testing-library/react';\nimport { useState } from 'react';\nimport './App.css';\nimport './components/ColorBox/colorbox.css';\nimport Click from './components/Click';\nimport ColorBox from './components/ColorBox';\nimport Person from './components/Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [toggle, setToggle] = useState('true');\n  const [person, setPerson] = useState([{\n    name: \"max\",\n    age: \"10\"\n  }, {\n    name: \"max 2\",\n    age: \"9\"\n  }, {\n    name: \"max 3\",\n    age: \"8\"\n  }]);\n\n  const changeClick = () => {\n    setPerson([{\n      name: \"max 4\",\n      age: \"1\"\n    }, {\n      name: \"max 5\",\n      age: \"2\"\n    }, {\n      name: \"max 6\",\n      age: \"3\"\n    }]);\n  };\n\n  const switchChangeInput = event => {\n    return setPerson([{\n      name: event.target.value,\n      age: '10'\n    }, {\n      name: \"max 5\",\n      age: \"2\"\n    }, {\n      name: \"max 6\",\n      age: \"3\"\n    }]);\n  };\n\n  const stylecustom = {\n    backgroundColor: 'green',\n    color: 'white'\n  };\n  let classes = []; // classes =['red','bold'];\n\n  if (person.length <= 1) classes.push('red');\n  if (person.length <= 2) classes.push('bold');\n  let personList = null;\n\n  if (toggle === true) {\n    personList = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: person.map((item, index) => {\n        // return<Person changed={switchChangeInput} click={changeClick} name={item.name} age={item.age}>This is children</Person>\n        return /*#__PURE__*/_jsxDEV(Person, {\n          changed: switchChangeInput,\n          click: () => deletedPerson(index),\n          name: item.name,\n          age: item.age,\n          children: \"This is children\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }, this);\n    stylecustom.backgroundColor = 'blue';\n  }\n\n  const deletedPerson = personIndex => {\n    let newPerson = [...person];\n    newPerson.splice(personIndex, 1);\n    setPerson(newPerson);\n  };\n\n  const changeToggle = () => {\n    return setToggle(!toggle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Color Box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"5Xy2BRSCY3s/IcVo7QyQGpN2A1Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/D/ReactJS-learn/colorbox-app/src/App.js"],"names":["render","useState","Click","ColorBox","Person","App","toggle","setToggle","person","setPerson","name","age","changeClick","switchChangeInput","event","target","value","stylecustom","backgroundColor","color","classes","length","push","personList","map","item","index","deletedPerson","personIndex","newPerson","splice","changeToggle"],"mappings":"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","sourcesContent":["\nimport { render } from '@testing-library/react';\nimport { useState } from 'react';\nimport './App.css';\nimport './components/ColorBox/colorbox.css';\nimport Click from './components/Click';\nimport ColorBox from './components/ColorBox';\nimport Person from './components/Person';\n\nfunction App() {\n  const [toggle,setToggle] = useState('true');\n  const [person,setPerson] = useState(\n    [\n      {name:\"max\",age:\"10\"},\n      {name:\"max 2\",age:\"9\"},\n      {name:\"max 3\",age:\"8\"}\n    ]\n  );\nconst changeClick = ()=>{\n  setPerson(\n    [\n      {name:\"max 4\",age:\"1\"},\n      {name:\"max 5\",age:\"2\"},\n      {name:\"max 6\",age:\"3\"}\n    ]\n  );\n}\nconst switchChangeInput =(event)=>{\n  return(\n    setPerson([\n      {name:event.target.value,age:'10'},\n      {name:\"max 5\",age:\"2\"},\n      {name:\"max 6\",age:\"3\"}\n    ])\n  );\n}\nconst stylecustom = {\n  backgroundColor:'green',\n  color:'white',\n};\nlet classes=[];\n// classes =['red','bold'];\nif(person.length<=1)classes.push('red');\nif(person.length<=2)classes.push('bold');\nlet personList = null;\n  if(toggle===true){\n    personList=(\n<div>{\n  person.map((item,index)=>{\n    // return<Person changed={switchChangeInput} click={changeClick} name={item.name} age={item.age}>This is children</Person>\n    return<Person changed={switchChangeInput} click={()=>deletedPerson(index)} name={item.name} age={item.age}>This is children</Person>\n          })\n  }        \n  </div>\n    );\n    stylecustom.backgroundColor = 'blue'; \n    \n  }\nconst deletedPerson =(personIndex)=>{\n  let newPerson = [...person];\n  newPerson.splice(personIndex,1);\n  setPerson(newPerson);\n}\n\nconst changeToggle =()=>{\n    return setToggle(!toggle);   \n}\n    return (\n      <>\n      <div className=\"App\">\n        <h1>Welcome to Color Box</h1>\n        {/* <button onClick={()=>changeClick()}>Click me!</button>\n        <h1 className=\"col-xs-6 col-lg-12\">Welcome to Tutorial</h1>\n        <p className={classes.join(' ')}>This class dynamic</p> */}\n        {/* <Person changed={switchChangeInput} click={changeClick} name={person[0].name} age={person[0].age}>This is children</Person>\n        <Person changed={switchChangeInput} click={changeClick} name={person[1].name} age={person[1].age}/>\n        <Person changed={switchChangeInput} click={changeClick} name={person[2].name} age={person[2].age}/> */}\n        {/* <Click />\n        <button style={stylecustom} onClick={()=>changeToggle()}>Toggle</button>\n        {personList} */}\n        <ColorBox/>\n      </div>\n      </>\n    );\n  }\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}